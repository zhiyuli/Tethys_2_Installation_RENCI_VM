supervisor

[program:postgis-docker]
command=docker start tethys_postgis
autostart=true
redirect_stderr=false
priority=100

[program:geoserver-docker]
command=docker start tethys_geoserver
autostart=true
redirect_stderr=false
priority=1000


[program:gunicorn]
# version >=19.7.1
command=bash -c "source /home/tethys/tethys/miniconda/bin/activate && source activate tethys && gunicorn tethys_portal.wsgi:application --name tethys-gunicorn --workers 8 --bind 127.0.0.1:49153 --timeout 600  --max-requests 0 --env HOME=/home/tethys --log-level debug --access-logfile /home/tethys/tethys/logs/gunicorn/access.log --log-file /home/tethys/tethys/logs/gunicorn/error.log --capture-output"
autostart=true
autorestart=true
redirect_stderr=false
user=tethys
stopasgroup=true
priority=900

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
priority=999
autostart=true
autorestart=true
startsecs=10
redirect_stderr=false
stopasgroup=True

-----------------------------------------------
nginx

# enable HTTPS and secure site
# replace !!! with your domain
# sudo nano /etc/nginx/conf.d/tethys_nginx.conf


# configuration of the server
server {
    #listen          80;
    #server_name     tethys.byu.edu;
    #return          301 https://$server_name$request_uri;
    
    # the port your site will be served on
    listen      80;
    # the domain name it will serve for
    server_name tethys.byu.edu; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 2048M;   # adjust to taste

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 600s;
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;

    # Tethys Workspaces
    location /workspaces  {
        internal;
        alias /home/tethys/tethys/workspaces;  # your Tethys workspaces files - amend as required
    }

    location /static {
        alias /home/tethys/tethys/static; # your Tethys static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        proxy_pass http://127.0.0.1:49153;
        proxy_redirect off;
    }

    location /geoserver {
        proxy_pass http://127.0.0.1:8181/geoserver;
    }
}

server {
    # the port your site will be served on
    listen      443 ssl;
    # the domain name it will serve for
    server_name tethys.byu.edu; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 2048M;   # adjust to taste
    
    ssl on;
    ssl_certificate         /certs_in_use/tethys_byu_edu.crt;
    ssl_certificate_key     /certs_in_use/tethys_byu_edu.key;
    ssl_trusted_certificate  /certs_in_use/DigiCertCA.crt;

    # see: https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-load-balancing-with-ssl-termination
    # SSL safety rating A+ by https://www.ssllabs.com/ssltest/
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;

    ssl_prefer_server_ciphers       on;
    ssl_protocols                   TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                     ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

    add_header Strict-Transport-Security "max-age=31536000";

    # Disallow access to every User-agent:
    location /robots.txt {return 200 "User-agent: *\nDisallow: /\n";}
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 600s;
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    
    # Tethys Workspaces
    location /workspaces  {
	internal;
        alias /home/tethys/tethys/workspaces;  # your Tethys workspaces files - amend as required
    }

    location /static {
        alias /home/tethys/tethys/static; # your Tethys static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        proxy_pass http://127.0.0.1:49153;
        proxy_redirect off;
    }

    location /geoserver {
        proxy_pass http://127.0.0.1:8181/geoserver;
    }
}

-------------------
settings.py
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '[%(asctime)s] %(levelname)s %(message)s',
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers': {
        'console_simple': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'console_verbose': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console_verbose'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'WARNING'),
            'propagate': False,
        },
        'tethys': {
            'handlers': ['console_verbose'],
            'level': 'INFO',
            'propagate': False,
        },
        'tethys_apps': {
            'handlers': ['console_verbose'],
            'level': 'DEBUG',
            'propagate': False,
        },
        '': {
             'handlers': ['console_verbose'],
             'level': 'ERROR',
         }
    },
}

DATA_UPLOAD_MAX_MEMORY_SIZE = 262144000 # 250MB https://docs.djangoproject.com/en/1.11/ref/settings/#data-upload-max-memory-size



--------------------
# set PYTHONUNBUFFERED in env var to disable python buffer ("print" statement in code gets saved to log file at once)
# https://docs.python.org/2/using/cmdline.html#envvar-PYTHONUNBUFFERED
# http://gunicorn-docs.readthedocs.io/en/latest/settings.html#enable-stdio-inheritance
# https://conda.io/docs/user-guide/tasks/manage-environments.html

cd /home/tethys/tethys/miniconda/envs/tethys/etc/conda/activate.d
nano python-gunicorn.sh
#!/bin/bash
# https://docs.python.org/2/using/cmdline.html#envvar-PYTHONUNBUFFERED
# http://gunicorn-docs.readthedocs.io/en/latest/settings.html#enable-stdio-inheritance
export PYTHONUNBUFFERED=TRUE

cd /home/tethys/tethys/miniconda/envs/tethys/etc/conda/deactivate.d
nano python-gunicorn.sh
#!/bin/bash
unset PYTHONUNBUFFERED

