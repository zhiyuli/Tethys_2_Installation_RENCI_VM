RENCI VM (CentOS 7) ENV
selinux disabled
iptables on with 80 and 433 closed
docker-engine and docker-compose are installed
a non-sudoer user: hydroapp:"service accounts"
domain: hs-apps-dev.hydroshare.org

What you will get:
Tethys 2 installed by user hydroapp with miniconda env at /var/tethys_deploy
uwsgi installed by Tethys minicoda
nginx supervisord installed by yum
linkage between nginx and uwsgi: unix socket file
uwsgi and nginx managed by supervisord
supervisord starts on boot
Tethys 2 uses dockerized postgres db (tethys_postgis)
tethys_postgis container auto starts on boot
https is enabled on nginx
OAuth login for HydroShare enabled
logs: /var/tethys_deploy/uwsgi/logs/
      /var/log/nginx/
      /var/log/supervisord/


Instructions:

sudo yum update
sudo yum install lynx
sudo yum install nano

sudo mkdir /var/tethys_deploy
sudo chown hydroapp:"service accounts" /var/tethys_deploy


sudo su - hydroapp
id
cd /var/tethys_deploy
wget https://raw.githubusercontent.com/tethysplatform/tethys/release/scripts/install_tethys.sh
bash install_tethys.sh -b release --tethys-home /var/tethys_deploy/tethys

. ~/bashrch
t
tstartdb # start miniconda postgres db
tms


# uwsgi
conda install -c conda-forge uwsgi
mkdir -p /var/tethys_deploy/tethys/uwsgi/logs

nano /var/tethys_deploy/tethys/src/tethys_portal/settings.py
allowed_hosts=["hs-apps-dev.hydroshare.org", "127.0.0.1"]
generate new django secret
DEBUG=False
uncomment static dir
uncomment workspace
cd /var/tethys_deploy/tethys/src
python manage.py collectstatic

# test -- manually run uwsgi on the backend
uwsgi --chdir=/var/tethys_deploy/tethys/src/tethys_portal \
    --home=/var/tethys_deploy/tethys/miniconda/envs/tethys \
    --module=wsgi \
    --master \
    --pidfile=/var/tethys_deploy/tethys/uwsgi/tethys-uwsgi-master.pid \
    --socket=/var/tethys_deploy/tethys/uwsgi/nginx-uwsgi.socket \
    --http=127.0.0.1:49153 \
    --processes=5 \
    --uid=20025 \
    --gid=10000 \
    --harakiri=20 \
    --max-requests=5000 \
    --vacuum \
    --chmod-socket \
    --daemonize=/var/tethys_deploy/tethys/uwsgi/logs/uwsgi.log
# try opening site in text browser
lynx 127.0.0.1:49153

# manaully stop uwsgi by pid file
uwsgi --stop /var/tethys_deploy/tethys/uwsgi/tethys-uwsgi-master.pid
# or manaully stop all uwsgi intances
pkill -f uwsgi -9


# setup nginx
exit
sudo yum install nginx
sudo nano /etc/nginx/conf.d/tethys_nginx.conf
# replace !!! with your domain
# tethys_nginx.conf
# the upstream component nginx needs to connect to
upstream django {    
    #server 127.0.0.1:49153; # for a ip socket
    server unix://var/tethys_deploy/tethys/uwsgi/nginx-uwsgi.socket; # for a file socket
}
# configuration of the server
server {
    # the port your site will be served on
    listen      80;
    # the domain name it will serve for
    server_name !!!hs-apps-dev.hydroshare.org!!!; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 2048M;   # adjust to taste

    # Tethys Workspaces
    location /workspaces  {
	internal;
        alias /var/tethys_deploy/tethys/workspaces;  # your Tethys workspaces files - amend as required
    }

    location /static {
        alias /var/tethys_deploy/tethys/static; # your Tethys static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include /etc/nginx/uwsgi_params;
    }
}

# config iptables
sudo iptables -L
sudo iptables -I INPUT -p tcp -m tcp --dport 80 -j ACCEPT
sudo iptables -I INPUT -p tcp -m tcp --dport 443 -j ACCEPT
sudo service iptables save
sudo service iptables restart
sudo service docker restart
sudo iptables -L


# manually start uwsgi and nginx
# in tethys mode
uwsgi ...(see above)
# in non-tethys mode
sudo service nginx restart
try to access hs-apps-dev.hydroshare.org in browser

# install postgis container (replace miniconda postgres)
# start tethys mode
# stop uwsgi
tethys docker init -c postgis
# nano settings to change db port (5435) and user (tethys_default)
sudo nano /var/tethys_deploy/tethys/src/tethys_portal/settings.py
docker ps
tethys docker start tethys_postgis
# restart uwsgi
python manage.py migrate
python manage.py createsuperuser


# auto start everything on boot (nginx, uwsgi, docker containers)
# supervisord (manage uwsgi and nginx)
sudo yum install supervisor
sudo nano /etc/supervisord.d/tethys.ini

[program:uwsgi]
command=bash -c "source /var/tethys_deploy/tethys/miniconda/bin/activate && source activate tethys && uwsgi --chdir=/var/tethys_deploy/tethys/src/tethys_portal --module=wsgi --home /var/tethys_deploy/tethys/miniconda/envs/tethys --master --pidfile=/var/tethys_deploy/tethys/uwsgi/tethys-uwsgi-master.pid --socket=/var/tethys_deploy/tethys/uwsgi/nginx-uwsgi.socket --http=127.0.0.1:49153 --processes=5 --uid=20025 --gid=10000 --harakiri=20 --max-requests=5000 --vacuum  --chmod-socket --logger file:logfile=/var/tethys_deploy/tethys/uwsgi/logs/uwsgi.log,maxsize=10000000"
autostart=true
autorestart=true
redirect_stderr=false
user=hydroapp
startsecs=10
stopsignal=QUIT
priority=900

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
priority=999
autostart=true
autorestart=true
startsecs=10
redirect_stderr=false

# stop uwsgi and nginx and start supervisord
sudo service supervisord start
Try to access hs-apps-dev.hydroshare.org

# set supervisord to start on boot
sudo service supervisord stop

(sudo chkconfig supervisord on)
sudo systemctl status supervisord
sudo systemctl start supervisord
sudo systemctl enable supervisord


# set tethys contianer postgis to start on boot
# make sure docker service auto start on boot
sudo systemctl enable docker.service
sudo systemctl status docker.service

sudo nano /etc/systemd/system/tethys_docker_postgis.service
[Unit]
Wants=docker.service
After=docker.service
 
[Service]
RemainAfterExit=yes
ExecStart=/usr/bin/docker start tethys_postgis
ExecStop=/usr/bin/docker stop tethys_postgis
 
[Install]
WantedBy=multi-user.target

docker stop tethys_postgis
sudo systemctl start tethys_docker_postgis.service
sudo systemctl enable tethys_docker_postgis.service
sudo systemctl status tethys_docker_postgis.service


# enable HTTPS and secure side
# replace !!! with your domain
sudo nano /etc/nginx/conf.d/tethys_nginx.conf

# the upstream component nginx needs to connect to
upstream django {    
    #server 127.0.0.1:49153; # for a ip socket
    server unix://var/tethys_deploy/tethys/uwsgi/nginx-uwsgi.socket; # for a file socket
}

# configuration of the server
server {
    listen          80;
    server_name     !!!hs-apps-dev.hydroshare.org!!!;
    return          301 https://$server_name$request_uri;
}

server {
    # the port your site will be served on
    listen      443 ssl;
    # the domain name it will serve for
    server_name !!!hs-apps-dev.hydroshare.org!!!; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 2048M;   # adjust to taste
    
    ssl on;
    ssl_certificate         /opt/hs-certs/server.crt;
    ssl_certificate_key     /opt/hs-certs/server.key;
    # ssl_trusted_certificate  /opt/hs-certs/cert-chain.crt;

    # see: https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-load-balancing-with-ssl-termination
    # SSL safety rating A+ by https://www.ssllabs.com/ssltest/
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;

    ssl_prefer_server_ciphers       on;
    ssl_protocols                   TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                     ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

    add_header Strict-Transport-Security "max-age=31536000";

    # Disallow access to every User-agent:
    location /robots.txt {return 200 "User-agent: *\nDisallow: /\n";}
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Tethys Workspaces
    location /workspaces  {
	internal;
        alias /var/tethys_deploy/tethys/workspaces;  # your Tethys workspaces files - amend as required
    }

    location /static {
        alias /var/tethys_deploy/tethys/static; # your Tethys static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include /etc/nginx/uwsgi_params;
    }
}

# Enable OAuth login for HydroShare

# register new app at www.hydroshare.org/o/applications
# get app_key and app_secret
nano /var/tethys_deploy/tethys/src/tethys_portal/settings.py
settings.py
'tethys_services.backends.hydroshare.HydroShareOAuth2',

## HydroShare
SOCIAL_AUTH_HYDROSHARE_KEY = '*******'
SOCIAL_AUTH_HYDROSHARE_SECRET = '***********************'

